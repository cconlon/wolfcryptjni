/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_wolfssl_wolfcrypt_AesGmac */

#ifndef _Included_com_wolfssl_wolfcrypt_AesGmac
#define _Included_com_wolfssl_wolfcrypt_AesGmac
#ifdef __cplusplus
extern "C" {
#endif
#undef com_wolfssl_wolfcrypt_AesGmac_NULL
#define com_wolfssl_wolfcrypt_AesGmac_NULL 0LL
/*
 * Class:     com_wolfssl_wolfcrypt_AesGmac
 * Method:    mallocNativeStruct_internal
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_wolfssl_wolfcrypt_AesGmac_mallocNativeStruct_1internal
  (JNIEnv *, jobject);

/*
 * Class:     com_wolfssl_wolfcrypt_AesGmac
 * Method:    native_init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_wolfssl_wolfcrypt_AesGmac_native_1init
  (JNIEnv *, jobject);

/*
 * Class:     com_wolfssl_wolfcrypt_AesGmac
 * Method:    native_free
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_wolfssl_wolfcrypt_AesGmac_native_1free
  (JNIEnv *, jobject);

/*
 * Class:     com_wolfssl_wolfcrypt_AesGmac
 * Method:    wc_GmacSetKey
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_wolfssl_wolfcrypt_AesGmac_wc_1GmacSetKey
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     com_wolfssl_wolfcrypt_AesGmac
 * Method:    wc_GmacUpdate
 * Signature: ([B[BI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_wolfssl_wolfcrypt_AesGmac_wc_1GmacUpdate
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jint);

/*
 * Class:     com_wolfssl_wolfcrypt_AesGmac
 * Method:    wc_Gmac
 * Signature: ([B[B[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_AesGmac_wc_1Gmac
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     com_wolfssl_wolfcrypt_AesGmac
 * Method:    wc_GmacVerify
 * Signature: ([B[B[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_AesGmac_wc_1GmacVerify
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
