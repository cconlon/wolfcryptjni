/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_wolfssl_wolfcrypt_WolfCrypt */

#ifndef _Included_com_wolfssl_wolfcrypt_WolfCrypt
#define _Included_com_wolfssl_wolfcrypt_WolfCrypt
#ifdef __cplusplus
extern "C" {
#endif
#undef com_wolfssl_wolfcrypt_WolfCrypt_SUCCESS
#define com_wolfssl_wolfcrypt_WolfCrypt_SUCCESS 0L
#undef com_wolfssl_wolfcrypt_WolfCrypt_FAILURE
#define com_wolfssl_wolfcrypt_WolfCrypt_FAILURE -1L
#undef com_wolfssl_wolfcrypt_WolfCrypt_WOLFSSL_SUCCESS
#define com_wolfssl_wolfcrypt_WolfCrypt_WOLFSSL_SUCCESS 1L
#undef com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_128_BITS
#define com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_128_BITS 16L
#undef com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_160_BITS
#define com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_160_BITS 20L
#undef com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_192_BITS
#define com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_192_BITS 24L
#undef com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_256_BITS
#define com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_256_BITS 32L
#undef com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_384_BITS
#define com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_384_BITS 48L
#undef com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_512_BITS
#define com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_512_BITS 64L
#undef com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_1024_BITS
#define com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_1024_BITS 128L
#undef com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_2048_BITS
#define com_wolfssl_wolfcrypt_WolfCrypt_SIZE_OF_2048_BITS 256L
/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_NONE
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1NONE
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_MD2
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1MD2
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_MD4
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1MD4
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_MD5
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1MD5
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA224
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA224
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA256
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA256
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA384
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA384
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA512
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA512
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_MD5_SHA
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1MD5_1SHA
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA3_224
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA3_1224
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA3_256
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA3_1256
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA3_384
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA3_1384
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    getWC_HASH_TYPE_SHA3_512
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_getWC_1HASH_1TYPE_1SHA3_1512
  (JNIEnv *, jclass);

/*
 * Class:     com_wolfssl_wolfcrypt_WolfCrypt
 * Method:    CrlEnabled
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_wolfssl_wolfcrypt_WolfCrypt_CrlEnabled
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
